[build-system]
requires = ["setuptools", "setuptools-scm[toml]", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "apix"
description = "API Explorer: Discover, Track, Test."
readme = "README.md"
requires-python = ">=3.10"
keywords = ["apix", "api", "explorer", "discovery", "tracking", "testing"]
authors = [{ name = "Jacob J Callahan", email = "jacob.callahan05@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "aiodns",
    "aiohttp",
    "attrs",
    # "cchardet",
    "click",
    "rich-click",
    "loguru~=0.7.2",
    "lxml",
    "setuptools",
    "pyyaml",
    "requests",
]
dynamic = ["version"]

[project.urls]
Repository = "https://github.com/JacobCallahan/apix"

[project.optional-dependencies]
dev = ["pre-commit", "pytest", "pytest-randomly", "ruff"]

[project.scripts]
apix = "apix.commands:cli"

[tool.setuptools]
platforms = ["any"]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
include = ["apix"]

[tool.setuptools_scm] # same as use_scm_version=True in setup.py

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = ["-v", "-l", "--color=yes", "--code-highlight=yes"]

[tool.ruff]
line-length = 99
target-version = "py311"

[tool.ruff.lint]
fixable = ["ALL"]
select = [
    "B",    # bugbear
    "C90",  # mccabe
    "E",    # pycodestyle
    "F",    # flake8
    "G",    # flake8-logging-format
    "I",    # isort
    "PERF", # Perflint rules
    "PLC",  # pylint
    "PLE",  # pylint
    "PLR",  # pylint
    "PLW",  # pylint
    "PTH",  # Use pathlib
    "PT",   # flake8-pytest
    "RET",  # flake8-return
    "RUF",  # Ruff-specific rules
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade
    "W",    # pycodestyle
]
ignore = [
    "B019",    # lru_cache can lead to memory leaks - acceptable tradeoff
    "PLR0911", # too many return statements - acceptable tradeoff
    "PLR0913", # too many arguments in function call - acceptable tradeoff
    "RET503",  # missing explicit return
    "RUF012",  # Mutable class attributes should be annotated with typing.ClassVar
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["apix"]
combine-as-imports = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.mccabe]
max-complexity = 20
